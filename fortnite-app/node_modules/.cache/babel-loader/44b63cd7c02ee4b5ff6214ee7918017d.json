{"ast":null,"code":"var _jsxFileName = \"/home/guga/Guga-Projetos/fortnite-app/src/context/FortniteProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport getChallenges from \"../services/getChallenges\";\nimport getItems from \"../services/getItems\";\nimport getMaps from \"../services/getMaps\";\nimport getNews from \"../services/getNews\";\nimport getPassRewards from \"../services/getPassRewards\";\nimport getUpcomingItems from \"../services/getUpcomingItems\";\nimport FortniteContext from \"./FortniteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FortniteProvider(props) {\n  _s();\n\n  const {\n    children\n  } = props;\n  const [users, setUsers] = useState({\n    userOne: '',\n    userTwo: ''\n  });\n  const [usersDataOne, setUsersDataOne] = useState();\n  const [usersDataTwo, setUsersDataTwo] = useState();\n  const [loading, setLoading] = useState(false);\n  const [maps, setMaps] = useState();\n  const [upcoming, setUpcoming] = useState();\n  const [news, setNews] = useState();\n  useEffect(() => {\n    const fetchData = async () => {\n      const maps = await getMaps();\n      setMaps(maps);\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const fetchChallenges = async () => {\n      const challenges = await getChallenges();\n      console.log(\"Missões :\", challenges);\n    };\n\n    fetchChallenges();\n  }, []);\n  useEffect(() => {\n    const fetchItems = async () => {\n      const items = await getItems();\n      console.log(\"Items :\", items);\n    };\n\n    fetchItems();\n  }, []);\n  useEffect(() => {\n    const fetchUpcomingItems = async () => {\n      const upcomingItems = await getUpcomingItems();\n      console.log(\"Items por vir :\", upcomingItems);\n      setUpcoming(upcomingItems);\n    };\n\n    fetchUpcomingItems();\n  }, []);\n  useEffect(() => {\n    const fetchNews = async () => {\n      const news = await getNews();\n      console.log(\"Notícias :\", news);\n      setNews(news.news);\n    };\n\n    fetchNews();\n  }, []);\n  useEffect(() => {\n    const fetchPassRewards = async () => {\n      const passRewards = await getPassRewards(20);\n      console.log(\"Recompensas do passe :\", passRewards);\n    };\n\n    fetchPassRewards();\n  }, []);\n  const context = {\n    users,\n    setUsers,\n    usersDataOne,\n    setUsersDataOne,\n    usersDataTwo,\n    setUsersDataTwo,\n    loading,\n    setLoading,\n    maps,\n    setMaps,\n    upcoming,\n    news\n  };\n  return /*#__PURE__*/_jsxDEV(FortniteContext.Provider, {\n    value: context,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FortniteProvider, \"rK1FHetlvN98Ym+/0Vn2MpuDdKE=\");\n\n_c = FortniteProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"FortniteProvider\");","map":{"version":3,"names":["React","useEffect","useState","getChallenges","getItems","getMaps","getNews","getPassRewards","getUpcomingItems","FortniteContext","FortniteProvider","props","children","users","setUsers","userOne","userTwo","usersDataOne","setUsersDataOne","usersDataTwo","setUsersDataTwo","loading","setLoading","maps","setMaps","upcoming","setUpcoming","news","setNews","fetchData","fetchChallenges","challenges","console","log","fetchItems","items","fetchUpcomingItems","upcomingItems","fetchNews","fetchPassRewards","passRewards","context"],"sources":["/home/guga/Guga-Projetos/fortnite-app/src/context/FortniteProvider.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport getChallenges from \"../services/getChallenges\";\nimport getItems from \"../services/getItems\";\nimport getMaps from \"../services/getMaps\";\nimport getNews from \"../services/getNews\";\nimport getPassRewards from \"../services/getPassRewards\";\nimport getUpcomingItems from \"../services/getUpcomingItems\";\nimport FortniteContext from \"./FortniteContext\";\n\nexport default function FortniteProvider(props) {\n    const { children } = props;\n\n    const [users, setUsers] = useState({ userOne: '', userTwo: ''})\n    const [usersDataOne, setUsersDataOne] = useState();\n    const [usersDataTwo, setUsersDataTwo] = useState();\n    const [loading, setLoading] = useState(false);\n    const [maps, setMaps] = useState()\n    const [upcoming, setUpcoming] = useState();\n    const [news, setNews] = useState();\n\n    useEffect(() => {\n        const fetchData = async () => {\n          const maps = await getMaps();\n          setMaps(maps);\n         } \n         fetchData();\n       }, [])\n\n       useEffect(() => {\n        const fetchChallenges = async () => {\n          const challenges = await getChallenges();\n          console.log(\"Missões :\", challenges)\n         } \n         fetchChallenges();\n       }, [])\n\n       useEffect(() => {\n        const fetchItems = async () => {\n          const items = await getItems();\n          console.log(\"Items :\", items)\n         } \n         fetchItems();\n       }, [])\n\n       useEffect(() => {\n        const fetchUpcomingItems = async () => {\n          const upcomingItems = await getUpcomingItems();\n          console.log(\"Items por vir :\", upcomingItems)\n          setUpcoming(upcomingItems);\n         } \n         fetchUpcomingItems();\n       }, [])\n\n       useEffect(() => {\n        const fetchNews = async () => {\n          const news = await getNews();\n          console.log(\"Notícias :\", news)\n          setNews(news.news)\n         } \n         fetchNews();\n       }, [])\n\n       useEffect(() => {\n        const fetchPassRewards = async () => {\n          const passRewards = await getPassRewards(20);\n          console.log(\"Recompensas do passe :\", passRewards)\n         } \n         fetchPassRewards();\n       }, [])\n       \n\n\n    const context = {\n        users,\n        setUsers,\n        usersDataOne,\n        setUsersDataOne,\n        usersDataTwo,\n        setUsersDataTwo,\n        loading,\n        setLoading,\n        maps,\n        setMaps,\n        upcoming,\n        news,\n    }\n    return  (\n        <FortniteContext.Provider value={ context } >\n            { children }\n        </FortniteContext.Provider>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;EAAA;;EAC5C,MAAM;IAAEC;EAAF,IAAeD,KAArB;EAEA,MAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC;IAAEa,OAAO,EAAE,EAAX;IAAeC,OAAO,EAAE;EAAxB,CAAD,CAAlC;EACA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,EAAhD;EACA,MAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,EAAhD;EACA,MAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,EAAhC;EACA,MAAM,CAACuB,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,EAAxC;EACA,MAAM,CAACyB,IAAD,EAAOC,OAAP,IAAkB1B,QAAQ,EAAhC;EAEAD,SAAS,CAAC,MAAM;IACZ,MAAM4B,SAAS,GAAG,YAAY;MAC5B,MAAMN,IAAI,GAAG,MAAMlB,OAAO,EAA1B;MACAmB,OAAO,CAACD,IAAD,CAAP;IACA,CAHF;;IAICM,SAAS;EACV,CANK,EAMH,EANG,CAAT;EAQG5B,SAAS,CAAC,MAAM;IACf,MAAM6B,eAAe,GAAG,YAAY;MAClC,MAAMC,UAAU,GAAG,MAAM5B,aAAa,EAAtC;MACA6B,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,UAAzB;IACA,CAHF;;IAICD,eAAe;EAChB,CANQ,EAMN,EANM,CAAT;EAQA7B,SAAS,CAAC,MAAM;IACf,MAAMiC,UAAU,GAAG,YAAY;MAC7B,MAAMC,KAAK,GAAG,MAAM/B,QAAQ,EAA5B;MACA4B,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,KAAvB;IACA,CAHF;;IAICD,UAAU;EACX,CANQ,EAMN,EANM,CAAT;EAQAjC,SAAS,CAAC,MAAM;IACf,MAAMmC,kBAAkB,GAAG,YAAY;MACrC,MAAMC,aAAa,GAAG,MAAM7B,gBAAgB,EAA5C;MACAwB,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BI,aAA/B;MACAX,WAAW,CAACW,aAAD,CAAX;IACA,CAJF;;IAKCD,kBAAkB;EACnB,CAPQ,EAON,EAPM,CAAT;EASAnC,SAAS,CAAC,MAAM;IACf,MAAMqC,SAAS,GAAG,YAAY;MAC5B,MAAMX,IAAI,GAAG,MAAMrB,OAAO,EAA1B;MACA0B,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BN,IAA1B;MACAC,OAAO,CAACD,IAAI,CAACA,IAAN,CAAP;IACA,CAJF;;IAKCW,SAAS;EACV,CAPQ,EAON,EAPM,CAAT;EASArC,SAAS,CAAC,MAAM;IACf,MAAMsC,gBAAgB,GAAG,YAAY;MACnC,MAAMC,WAAW,GAAG,MAAMjC,cAAc,CAAC,EAAD,CAAxC;MACAyB,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCO,WAAtC;IACA,CAHF;;IAICD,gBAAgB;EACjB,CANQ,EAMN,EANM,CAAT;EAUH,MAAME,OAAO,GAAG;IACZ5B,KADY;IAEZC,QAFY;IAGZG,YAHY;IAIZC,eAJY;IAKZC,YALY;IAMZC,eANY;IAOZC,OAPY;IAQZC,UARY;IASZC,IATY;IAUZC,OAVY;IAWZC,QAXY;IAYZE;EAZY,CAAhB;EAcA,oBACI,QAAC,eAAD,CAAiB,QAAjB;IAA0B,KAAK,EAAGc,OAAlC;IAAA,UACM7B;EADN;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH;;GAlFuBF,gB;;KAAAA,gB"},"metadata":{},"sourceType":"module"}